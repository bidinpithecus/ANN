import math

def rk4(f, x0, y0,x_values, n):
    r = []
    h = x_values[0] - x0
    for _ in range(n):
        #realizar as iterações
        if (_>=1):
            h = x_values[_] - x_values[_-1]
        m1 = f(x0, y0)
        m2 = f(x0 + h/2, y0 + (h/2)*m1)
        m3 = f(x0 + h/2, y0 + (h/2)*m2)
        m4 = f(x0 + h, y0 + h *m3)
        yk = y0 + h * (m1+2*m2+2*m3+m4)/6
        #atualizando os valores
        x0 = x_values[_]
        y0 = yk
        #colocando valores na lista
        r.append((x0, y0))
    return r

# modificar valores de r e lambd    
def f(p, t):
    r = 0.16234
    lambd = 0.02836
    k = r * lambd
    return k * (1 - t)

# modificar valor de p0    
t0 = 0
p0 = 0.00104
t_values = [0.12724, 0.2836, 0.42448, 0.66077, 0.83262, 1.06759, 1.36313, 1.56377, 1.70294, 1.88744, 2.051, 2.22654, 2.49744, 2.73742, 2.84288, 3.09854, 3.22626, 3.46028, 3.68822, 3.96454, 4.08828, 4.22825, 4.42447, 4.67892, 4.96227, 5.08739, 5.31515, 5.45691, 5.69817, 5.89623, 6.06933, 6.32763, 6.4395, 6.73204, 6.95321, 7.08746, 7.36584, 7.50279, 7.6795, 7.91206, 8.11199, 8.243, 8.43352, 8.76044, 8.88358, 9.0695, 9.32127, 9.44682, 9.66345, 9.87202, 10.13278, 10.31554, 10.48306, 10.71559, 10.93503, 11.15753, 11.23241, 11.43213, 11.70809, 11.97068, 12.05789, 12.37401, 12.48151, 12.64642, 12.911, 13.11663, 13.26815, 13.44802, 13.77189, 13.84762, 14.09704, 14.30393, 14.57995, 14.6619, 14.86082, 15.03932, 15.34344, 15.45414, 15.76873, 15.84945, 16.03909, 16.22776, 16.51971, 16.67379, 16.92948, 17.14879, 17.22781, 17.44404, 17.68614, 17.8654, 18.10544, 18.36169, 18.54406, 18.77712, 18.83077, 19.12814, 19.32109, 19.55898, 19.65169, 19.84861, 20.0336, 20.33382, 20.44961, 20.69993, 20.93231, 21.0494, 21.31803, 21.57599, 21.75742, 21.93193, 22.03183, 22.3032, 22.4509, 22.70487, 22.96442, 23.02315, 23.32853, 23.46504, 23.77318, 23.83139, 24.10755, 24.28924, 24.52526, 24.72286, 24.84247, 25.12026, 25.37984, 25.51137, 25.6534, 25.95803, 26.09675, 26.29456, 26.44579, 26.70487, 26.88221, 27.03227, 27.26228, 27.5362, 27.70106, 27.84612, 28.16943, 28.23522, 28.57429, 28.68036, 28.92461, 29.07625, 29.25997, 29.49541, 29.74379, 29.975, 30.1349, 30.30026, 30.55227, 30.66855, 30.86355, 31.09173, 31.34083, 31.44944, 31.75523, 31.95275, 32.17036, 32.25901, 32.50462, 32.75725, 32.94176, 33.13169, 33.27035, 33.4641, 33.72159, 33.91789, 34.13142, 34.23813, 34.57942, 34.74115, 34.84524, 35.16189, 35.35283, 35.45433, 35.75439, 35.83387, 36.02002, 36.31432, 36.54991, 36.73948, 36.9278, 37.16807, 37.37525, 37.53917, 37.64632, 37.82916, 38.13591, 38.22868, 38.48371, 38.76628, 38.91802, 39.15559, 39.33634, 39.53586, 39.70085, 39.84222, 40.13235, 40.28872, 40.55461, 40.76139, 40.96986, 41.03049, 41.3512, 41.48571, 41.74321, 41.97459, 42.08207, 42.26891, 42.42868, 42.69375, 42.87705, 43.14526, 43.23355, 43.56695, 43.70017, 43.95961, 44.04752, 44.3165, 44.42378, 44.65791, 44.92238, 45.0435, 45.34394, 45.56949, 45.70879, 45.87508, 46.06051, 46.23845, 46.43512, 46.71424, 46.95519, 47.12385, 47.24687, 47.48384, 47.69459, 47.90196, 48.07313, 48.22478, 48.42162, 48.68971, 48.91404, 49.08564, 49.2331, 49.42772, 49.66554, 49.95543, 50.06956, 50.32465, 50.47673, 50.71467, 50.97932, 51.04573, 51.24466, 51.43411, 51.70147, 51.92642, 52.06391, 52.22276, 52.53238, 52.70336, 52.90775, 53.15912, 53.35624, 53.42982, 53.62124, 53.95456, 54.11622, 54.32528, 54.43561, 54.77097, 54.96321, 55.15809, 55.26513, 55.49549, 55.67341, 55.91485, 56.04169, 56.33889, 56.44315, 56.7786, 56.866, 57.14005, 57.28708, 57.57717, 57.72759, 57.88404, 58.03204, 58.33912, 58.51095, 58.6751, 58.96737, 59.09967, 59.27568, 59.48977, 59.6524, 59.86952, 60.07906, 60.27828, 60.45426, 60.77515, 60.82721, 61.06606, 61.23612, 61.43778, 61.65662, 61.95089, 62.14089, 62.33526, 62.45296, 62.73792, 62.97097, 63.10861, 63.3798, 63.55372, 63.72615, 63.87871, 64.12173, 64.3038, 64.5162, 64.74089, 64.94578, 65.09828, 65.25009, 65.48437, 65.65303, 65.84493, 66.10969, 66.32837, 66.42906, 66.70576, 66.95853, 67.05236, 67.35274, 67.5024, 67.70678, 67.85879, 68.1262, 68.36149, 68.5473, 68.75179, 68.95309, 69.05538, 69.36659, 69.51559, 69.65643, 69.89756, 70.11847, 70.28399, 70.53708, 70.76476, 70.95433, 71.07971, 71.24574, 71.5115, 71.74238, 71.97186, 72.05931, 72.24667, 72.56548, 72.72794, 72.90501, 73.12558, 73.26152, 73.55163, 73.65883, 73.91059, 74.079, 74.3608, 74.43631, 74.71076, 74.90355, 75.06554, 75.24958, 75.51277, 75.7107, 75.86803, 76.14029, 76.33823, 76.49124, 76.74656, 76.8778, 77.03853, 77.29339, 77.51569, 77.73549, 77.90368, 78.09785, 78.26017, 78.54296, 78.77558, 78.97676, 79.15637, 79.32891, 79.48662, 79.73248, 79.87599, 80.15773, 80.30374, 80.50469, 80.62128, 80.86734, 81.17705, 81.22022, 81.51646, 81.71626, 81.90487, 82.15159, 82.35279, 82.52361, 82.72662, 82.85636, 83.13522, 83.28383, 83.51564, 83.64369, 83.87668, 84.17178, 84.35103, 84.55349, 84.76932, 84.88336, 85.07812, 85.35928, 85.4451, 85.62666, 85.89073, 86.07174, 86.24603, 86.45855, 86.75868, 86.86978, 87.07962, 87.35255, 87.43368, 87.65736, 87.95962, 88.07607, 88.36305, 88.44491, 88.66078, 88.95604, 89.15343, 89.24049, 89.43482, 89.69586, 89.95826, 90.09236, 90.34268, 90.50722, 90.66024, 90.89304, 91.10851, 91.23595, 91.57829, 91.64313, 91.88826, 92.1588, 92.32218, 92.5781, 92.72167, 92.89549, 93.04473, 93.25409, 93.49395, 93.77845, 93.85824, 94.13177, 94.22767, 94.54725, 94.69302, 94.831, 95.04315, 95.2287, 95.42821, 95.66754, 95.85897, 96.09471, 96.35678, 96.49835, 96.74324, 96.93344, 97.16695, 97.3177, 97.54908, 97.73609, 97.84311, 98.07697, 98.32589, 98.43312, 98.64379, 98.83517, 99.05528, 99.37619, 99.51405, 99.65632, 99.87124]
n = 500

r = rk4(f, t0, p0, t_values, n)

runge = []
for yi in r:
    runge.append(yi[1])

# solução exata:
# modificar valores de r, lambd e coef 
def p(t):
    r = 0.13512
    lambd = 0.01837
    k = r * lambd
    # resolver:
    # solve p'(t) = k * (1 - p(t)), p(0) = p0
    # no wolfram, substituindo o valor de p0 dado na questao
    coef = 0.00785
    return 1 - coef * math.exp(-k*t)
    
for i in range(500):
    print(f"{runge[i]}, {abs(0)},")